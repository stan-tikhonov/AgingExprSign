library(GEOquery)
rat_liver_gse_1 = getGEO("GSE66715")
View(pdata(rat_liver_gse_1[[1]]))
View(pData(rat_liver_gse_1[[1]]))
mus_liver_gse_1 = getGEO("GSE57809")
View(pData(mus_liver_gse_1[[1]]))
mus_kidney_gse_1 = getGEO("GSE74463")
View(pData(mus_kidney_gse_1[[1]]))
GSE66715 <- rat_liver_gse_1
GSE57809 <- mus_liver_gse_1
GSE74463 <- mus_kidney_gse_1
<<<<<<< HEAD
library(GEOquery)
GSE132901 = getGEO("GSE132901")
View(pData(GSE132901[[1]]))
library(GEOquery)
GSE3150 = getGEO("GSE3150")
View(pData(GSE3150[[1]]))
GSE6591 = getGEO("GSE6591")
View(pData(GSE6591[[1]]))
GSE121364 = getGEO("GSE121364")
View(pData(GSE121364[[1]]))
GSE5086 = getGEO("GSE5086")
View(pData(GSE5086[[1]]))
GSE128925 = getGEO("GSE128925")
View(pData(GSE128925[[1]]))
GSE129788 = getGEO("GSE129788")
View(pData(GSE129788[[1]]))
GSE9103 = getGEO("GSE9103")
View(pData(GSE9103[[1]]))
GSE106108 = getGEO("GSE106108")
View(pData(GSE106108[[1]]))
=======
E-MTAB-3374 = read.csv("E-MTAB-3374.sdrf.txt", sep = "\t")
E-MTAB-3374 = read.table("E-MTAB-3374.sdrf.txt", sep = "\t")
E_MTAB_3374 = read.table("E-MTAB-3374.sdrf.txt", sep = "\t")
View(E_MTAB_3374)
E_MTAB_3374_pheno <- E_MTAB_3374
E_MTAB_3374_expr = read.table("SampleProbe_RawData_all_def.txt", sep = "\t")
View(E_MTAB_3374_expr)
rm(E_MTAB_3374)
View(E_MTAB_3374_pheno)
library(GEOquery)
GSE53959 = getGEO("GSE53959")
View(pData(GSE53959[[1]]))
>>>>>>> 53e7dfda8759df9c21ac8b78236505e73429bd39
library(dplyr)
head(starwars)
View(starwars)
View(starwars %>% group_by(homeworld) %>% summarise(n()) %>% arrange(desc(n)))
View(starwars %>% group_by(homeworld) %>% summarise(n()) %>% arrange(n))
View(starwars %>% group_by(homeworld) %>% summarise(count = n()) %>% arrange(count))
Viw(starwars %>% filter(homeworld == "Naboo")) %>% group_by(skin_color) %>% summarise(count=n()) %>% arrange(count))
Viw(starwars %>% filter(homeworld == "Naboo") %>% group_by(skin_color) %>% summarise(count=n()) %>% arrange(count))
View(starwars %>% filter(homeworld == "Naboo") %>% group_by(skin_color) %>% summarise(count=n()) %>% arrange(count))
View(starwars %>% group_by(skin_color) %>% summarise(maxheight=max(height)) %>% arrange(maxheight))
View(starwars %>% group_by(skin_color) %>% summarise(sd=sd(height)) %>% arrange(sd))
library(GEOquery)
GSE53960 = getGEO("GSE53960")
View(pData(GSE53960[[1]]))
View(pData(GSE53960[[1]]))
View(fData(GSE53960[[1]]))
View(exprs(GSE53960[[1]]))
View(exprs(GSE53960[[1]]))
View(exprs(GSE53959[[1]]))
View(GSE53960)
View(GSE53960[["GSE53960_series_matrix.txt.gz"]])
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@experimentData)
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData)
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData@exprs)
View(exprs(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData))
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData))
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData)
View(GSE53960[["GSE53960_series_matrix.txt.gz"]]@assayData[["exprs"]])
View(GSE53959)
head(exprs(GSE53960[[1]]))
View(GSE53959)
GSE53959[["GSE53959_series_matrix.txt.gz"]]@assayData[["exprs"]]
?getGEO()
klutch = sapply("GSE53960/*.txt.gz", getGEO)
pwd
getwd()
View("./GSE53960/GSM1328546_SEQC_Hrt_F_104_2.txt.gz")
setwd("./GSE53960")
getwd()
klutch = getGEO("GSM1328546_SEQC_Hrt_F_104_2.txt.gz")
setwd("../")
getwd()
klutch = getGEO("GSE53960_RAW.tar")
library(GEOquery)
sanya_expr = read.csv("Sanya_rnaseq_expr.csv")
View(sanya_expr)
sanya_pheno = read.table("Sanya_rnaseq_pheno.txt", sep = "\t")
View(sanya_pheno)
View(sanya_expr)
sanya_pheno = subset(sanya_pheno, grepl("^kidney.*", V2))
View(sanya_pheno)
sanya_expr = sanya_expr[, sanya_pheno$V1]
View(sanya_expr)
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
filteredphenodata = sanya_pheno
library(tidyverse)
filteredexprstack = stack(filteredexprdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(filteredexprdata)
df[] <- lapply(filteredexprdata, (log2(x) + 1) paste(x,"x", sep=""))
df[] <- lapply(filteredexprdata, log2(x) + 1 paste(x,"x", sep=""))
logdata = filteredexprdata %>% mutate_all(log2(paste0(., "x")) + 1)
df[] <- lapply(filteredexprdata, log2(x) + 1, paste(x,"x", sep=""))
logdata = log2(filteredexprdata + 1)
View(logdata)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(logdata)
View(filteredexprdata)
View(sanya_expr)
filteredexprdata = subset(filteredexprdata, select = -c(X))
View(filteredexprdata)
logdata = log2(filteredexprdata + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(filteredexprdata)
View(sanya_expr)
sanya_expr = read.csv("RNA_combined_stranded_counts.csv")
View(sanya_expr)
sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
View(sanya_expr)
sanya_expr = sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
View(sanya_expr)
sanya_expr = subset(sanya_expr, select = -c(X))
View(sanya_expr)
View(sanya_pheno)
sanya_pheno = sanya_pheno[-5,]
View(sanya_pheno)
sanya_expr = sanya_expr[, sanya_pheno$V1]
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
View(filteredexprdata)
filteredphenodata = sanya_pheno
logdata = log2(filteredexprdata + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
filteredexprdata$rowsum = rowSums(filteredexprdata > 10)
View(filteredexprdata)
filteredexprdata$rowsum = rowSums(filteredexprdata > 4)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
View(filteredexprdata1)
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
View(filteredexprdata1)
filteredexprdata$rowsum = rowSums(filteredexprdata > 10)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(filteredexprdata1)
View(filteredexprstack)
View(filteredexprdata1)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 5,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
filteredexprdata$rowsum = rowSums(filteredexprdata > 30)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
filteredexprdata$rowsum = rowSums(filteredexprdata > 50)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
filteredexprdata$rowsum = rowSums(filteredexprdata > 30)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 7,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
sanya_expr = read.csv("RNA_combined_stranded_counts.csv")
sanya_expr = sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
sanya_expr = subset(sanya_expr, select = -c(X))
sanya_pheno = read.table("Sanya_rnaseq_pheno.txt", sep = "\t")
sanya_pheno = subset(sanya_pheno, grepl("^kidney.*", V2))
sanya_expr = sanya_expr[, sanya_pheno$V1]
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
filteredphenodata = sanya_pheno
filteredexprdata$rowsum = rowSums(filteredexprdata > 10)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(filteredphenodata)
filteredphenodata = filteredphenodata[-10,]
View(filteredphenodata)
logdata = logdata[, filteredphenodata$V1]
View(logdata)
View(logdata)
View(logdata)
View(sanya_pheno)
View(sanya_expr)
View(sanya_pheno)
logdata = logdata[,-10]
View(logdata)
logdata = logdata[, filteredphenodata$V1]
filteredphenodata$V1
colnames(logdata)
logdata[1, filteredphenodata$V1[1]]
logdata[1, filteredphenodata$V1[2]]
logdata[1, filteredphenodata$V1[3]]
logdata[1, filteredphenodata$V1[4]]
logdata[1, filteredphenodata$V1[5]]
logdata[1, filteredphenodata$V1[6]]
logdata[1, filteredphenodata$V1[7]]
logdata[1, filteredphenodata$V1[8]]
logdata[1, filteredphenodata$V1[9]]
filteredphenodata$V1 = trimws(filteredphenodata$V1)
logdata[1, filteredphenodata$V1[8]]
logdata = logdata[, filteredphenodata$V1]
View(logdata)
filteredexprdata = filteredexprdata[, filteredphenodata$V1]
filteredexprdata$rowsum = rowSums(filteredexprdata > 10)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
source("FUN.RLE_normalization.R")
normdata = RLE_normalization(logdata)
install.packages(edgeR)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
library(edgeR)
normdata = RLE_normalization(logdata)
View(normdata)
View(normdata)
dget("Signatures_mouse_genes.R")
signatures = dget("Signatures_mouse_genes.R")
View(signatures)
head(signatures$Species$Liver)
source("FUN.Ensembl_mouse_dictionary_create.R")
source("FUN.Ensembl_to_entrez.R")
entrezdata = Ensembl_to_entrez(normdata, Ensembl_mouse_dictionary_create(normdata))
dic = Ensembl_mouse_dictionary_create(normdata)
install.packages("org.Mm.eg.db")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Mm.eg.db")
dic = Ensembl_mouse_dictionary_create(normdata)
library(org.Mm.eg.db)
dic = Ensembl_mouse_dictionary_create(normdata)
View(normdata)
dic = Ensembl_mouse_dictionary_create(normdata)
source("FUN.Ensembl_mouse_dictionary_create.R")
dic = Ensembl_mouse_dictionary_create(normdata)
View(dic)
rownames(normdata)[1]
rownames(normdata)[101]
library(org.Mm.eg.db)
testdata <- normdata
dataset = testdata
xx <- as.list(org.Mm.egENSEMBL2EG)
ensembltoentrez <- data.frame(ID=rownames(dataset),ENTREZID=NA)
rownames(ensembltoentrez) <- ensembltoentrez$ID
l=0
r=0
for (i in 1:nrow(dataset))
{
if (length(xx[[rownames(dataset)[i]]])==1)
{
ensembltoentrez[i,2] <- xx[[rownames(dataset)[i]]]
}
else if (is.null(xx[[rownames(dataset)[i]]]))
{
r=r+1
}
else
{
l=l+1
}
}
View(ensembltoentrez)
View(xx)
keknames = sub("(.*)_(.*)", "/1", rownames(normdata))
keknames = sub("(.*)_(.*)", "\1", rownames(normdata))
keknames = sub("_(.*)$", "", rownames(normdata))
keknames[1]
rownames(testdata) = keknames
View(testdata)
source("FUN.Ensembl_mouse_dictionary_create.R")
dic = Ensembl_mouse_dictionary_create(testdata)
source("FUN.Ensembl_to_entrez.R")
testdata = Ensembl_to_entrez(testdata, dic)
View(testdata)
View(filteredphenodata)
sanya_expr = read.csv("RNA_combined_stranded_counts.csv")
sanya_expr = sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
sanya_expr = subset(sanya_expr, select = -c(X))
sanya_pheno = read.table("Sanya_rnaseq_pheno.txt", sep = "\t")
sanya_expr = sanya_expr[, sanya_pheno$V1]
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
filteredphenodata = sanya_pheno
View(filteredphenodata)
sanya_expr = read.csv("RNA_combined_stranded_counts.csv")
sanya_expr = sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
sanya_expr = subset(sanya_expr, select = -c(X))
sanya_pheno = read.table("Sanya_rnaseq_pheno.txt", sep = "\t")
sanya_pheno = subset(sanya_pheno, grepl("^kidney.*", V2))
#sanya_pheno = sanya_pheno[-5,] #delete liver 32m_1
sanya_expr = sanya_expr[, sanya_pheno$V1]
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
filteredphenodata = sanya_pheno
filteredphenodata = filteredphenodata[-10,]
filteredphenodata$V1 = trimws(filteredphenodata$V1)
View(filteredphenodata)
filteredphenodata = filteredphenodata %>% separate(V2, c("Tissue", "Age", NA))
View(filteredphenodata)
exprforpca = data.frame(t(scale(t(normdata))))
pcamodel = prcomp(t(exprforpca))
cluster_values = as.data.frame(pcamodel[['x']])
cluster_plot = ggplot(cluster_values, aes(x = PC1, y = PC2))
color_pca = filteredphenodata[, "Age"]
cluster_plot + geom_point(aes(color = color_pca))
sanya_expr = read.csv("RNA_combined_stranded_counts.csv")
sanya_expr = sanya_expr %>% remove_rownames %>% column_to_rownames(var="ID")
sanya_expr = subset(sanya_expr, select = -c(X))
sanya_pheno = read.table("Sanya_rnaseq_pheno.txt", sep = "\t")
sanya_pheno = subset(sanya_pheno, grepl("^kidney.*", V2))
#sanya_pheno = sanya_pheno[-5,] #delete liver 32m_1
sanya_expr = sanya_expr[, sanya_pheno$V1]
sanya_expr = na.omit(sanya_expr)
filteredexprdata = sanya_expr
filteredphenodata = sanya_pheno
filteredphenodata = filteredphenodata[-10,]
View(filteredphenodata)
filteredphenodata = filteredphenodata[-c(5, 9),]
View(filteredphenodata)
filteredphenodata$V1 = trimws(filteredphenodata$V1)
filteredexprdata = filteredexprdata[, filteredphenodata$V1]
filteredphenodata = filteredphenodata %>% separate(V2, c("Tissue", "Age", NA))
filteredexprdata$rowsum = rowSums(filteredexprdata > 10)
filteredexprdata1 = filteredexprdata[filteredexprdata$rowsum > 3,]
filteredexprdata1 = subset(filteredexprdata1, select = -c(rowsum))
logdata = log2(filteredexprdata1 + 1)
filteredexprstack = stack(logdata)
ggplot(filteredexprstack, aes=(x=values)) + geom_density(aes(x=values, group=ind, color=ind))
View(normdata)
normdata = RLE_normalization(logdata)
keknames = sub("_(.*)$", "", rownames(normdata))
rownames(normdata) = keknames
dic = Ensembl_mouse_dictionary_create(normdata)
normdata = Ensembl_to_entrez(normdata, dic)
#plotting PCA
exprforpca = data.frame(t(scale(t(normdata))))
pcamodel = prcomp(t(exprforpca))
cluster_values = as.data.frame(pcamodel[['x']])
cluster_plot = ggplot(cluster_values, aes(x = PC1, y = PC2))
color_pca = filteredphenodata[, "Age"]
cluster_plot + geom_point(aes(color = color_pca))
cluster_plot = ggplot(cluster_values, aes(x = PС2, y = PC3)
cluster_plot = ggplot(cluster_values, aes(x = PС2, y = PC3))
pcamodel = prcomp(t(exprforpca))
cluster_values = as.data.frame(pcamodel[['x']])
cluster_plot = ggplot(cluster_values, aes(x = PC2, y = PC3))
color_pca = filteredphenodata[, "Age"]
cluster_plot + geom_point(aes(color = color_pca))
View(filteredexprdata1)
keknames = sub("_(.*)$", "", rownames(filteredexprdata1))
rownames(filteredexprdata1) = keknames
View(filteredexprdata1)
dic = Ensembl_mouse_dictionary_create(filteredexprdata1)
filteredexprdata1 = Ensembl_to_entrez(filteredexprdata1, dic)
View(filteredexprdata1)
